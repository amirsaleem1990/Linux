# multitasking in one shell.
# eg: when we start jupyter from terminal we can't use that terminal until we kill the jupyter, so instead of:
jpyter-lab
#  type 
jupyter-lab &
# now you can use that terminal for other command too.
---------------------------------
#  list all files, size mesure = MB
ls -l --block-size=M
---------------------------------
# remove not empty folder
rm -r folder_name/
---------------------------------
# Move a window to a different workspace
Super+Shift+Page Up
Super+Shift+Page Down
---------------------------------
# connected wifi details
nmcli dev wifi
---------------------------------
# all 
Go to /sys/class/net you can see list of folders here.
find wireless interface. It has wireless folder. for example in my case is wlp10 you can check it using ls wlp10. if the folder's name different use that folder's name.
sudo iwlist wlp1s0 scan | grep ESSID
---------------------------------
#####################
Wildcards *
#####################
a*.txt
# matches all file names that start with a lowercase letter a and end with .txt.
---------------------------------
# If you want files that start with an uppercase A or a lowercase a and end with .txt, use the expression
[Aa]*.txt
# This expression would match the following files:
--------------------------------
# You can use the star more than once — for example, with the expression a*v*.txt. This expression would match only one file in the example list of files:
# among file: [a.txt, a_very_long_name.txt, A_FILE_NAME_WITH_UPPERCASE_LETTERS.txt]
a_very_long_name.txt
--------------------------------
ls /usr/lib/l*z*.a
# list of all files in path /user/lib/ that starts with <l> and contain <z> and fileExtention <.a>
--------------------------------
ls /usr/lib/l*[AFLz]*.a
# list of all files in path /user/lib their names starts with <l>, and contains at least one of the <A, F, L, z] and ending with <.a>
--------------------------------
--------------------------------
--------------------------------



--------------------------------
count all files with .py extention in current folder
ls *.py | wc
---------------------------------
# count all files in current folder
ls | wc
---------------------------------
# count all files in current folder and his childrens subfolders
find . | wc
---------------------------------
# count all files with .py extention in current folder and his childrens subfolders
find . -name "*.py" | wc
---------------------------------
NOTE: If you deleted the file by pressing Shift+Delete , or by using the command line, the file has been permanently deleted. Files that have been permanently deleted can’t be recovered from the Trash.
---------------------------------
# unzip / extract zip file
unzip file.zip
--------------------------------
# unzip tar.gz file
tar xvzf file.tar.gz
---------------------------------
# unzip / extract bz2 file
# unzip and remove bz2 file
bzip2 -d file.bz2

If you want to extract it and keep the original, run this command:
bzip2 -dk file.bz2
---------------------------------
How to search for text string on multiple files?
find . -type f -print | sed 's/ /\\ /g' | xargs grep -i "my text string"
[    What that does:
    Find everything in the current directory or any of its children which is a regular file.

    Convert spaces in filenames to escaped spaces so the grep won't fail.

    xargs converts the line-separated list of items from the find into a space separated list for the grep.

    grep -i is searching while ignoring capitalization for "my text string" 

    Help stamp out MBR partition tables. Use GPT instead!
https://ubuntuforums.org/showthread.php?t=1722145]
---------------------------------
create alias for terminal
alias p="ipython"
# ab jab bhi terminal par <p> likh kar enter karun ga
# to ipython khul jay ga
---------------------------------
To see all the aliases defined in the environment:
alias
---------------------------------
To remove an alias, the unalias command is used, like so:
unalias alias_name
---------------------------------
# nautilus bookmark editing
# first: open the file
gio open .config/gtk-3.0/bookmarks
# then edit this file
---------------------------------
# save text[currently in clipboard] in file
xclip -o > new_file_name.txt
---------------------------------
# Put the contents of the selection into a file.
xclip -t text/html index.html
---------------------------------
# save text to file
echo "my name is amir" > file_name.txt
---------------------------------
# save image[currently in clipboar] in file
xclip -selection clipboard -t image/png -o > file.png
# this command is vary big, hence hard to type any time, so we can create an alias of this command,
alias si="xclip -selection clipboard -t image/png -o >"
# now we type like thi: si image_15


# save this alias from perminent use:
# open terminal and type:
subl ~/.bashrc
# go to last line and pest your alias command there, <alias si="xclip -selection clipboard -t image/png -o >">
# One gotcha is that there cannot be a space between the “aliasname” and the EQUAL sign. Also, there can’t be a space between the EQUAL sign and the opening quote for the command.
# close the file
# type on your terminal: 
source ~/.bashrc
---------------------------------
# list of all files in current folder, with size and date, sorted by time, most early on top
ls -l  -S --sort=time -r
---------------------------------
# suspend
pm-suspend
# or sudo pm-suspend
---------------------------------
# hibernate
pm-hibernate
# or sudo pm-hibernate
# or systemctl hibernate
---------------------------------
# How Do I Put My Computer To Sleep After a Certain Amount Of Time?
echo 'pm-suspend' | at now + 30 minutes
# or echo 'systemctl suspend' | at now + 30 minutes
---------------------------------
# pichly folder ki files list
ls ..
---------------------------------
# agly folder ki list
ls folder_name_in_current_directory
---------------------------------
# foxit alias
alias foxit='/home/home/opt/foxitsoftware/foxitreader/FoxitReader'
---------------------------------
# close terminal shortcut
CTLR+D
---------------------------------
# zip folder 
# zip folder <Sentiment140> to file <Sentiment140.zip>
zip -r Sentiment140.zip Sentiment140/


# zip files
zip imtiaz-list.zip imtiaz-list.*
---------------------------------
# get file size
du -sh file or folder name
---------------------------------
#alias for rm remove
#if you remove file or folder using terminal the removed file deleted perminantily, if we do mistake we can't restore our file, so we need alias, this alias move the file to particuler file, and if i remove file by mistake i can go to this particuler folder and recover from here.
alias rm='mv -t /home/home/Desktop/Trash/'
---------------------------------
# for count videos duration in particuler foler
for f in *.mp4; do ffmpeg -i "$f" 2>&1 | grep Duration | cut -d " " -f 4 | sed s/,//  | tr -d "\n" && echo " $f"; done
---------------------------------
# Also we can use the following command to add alias without opening the ~/.bash_aliases file
echo "alias vps='ssh user@ip_address_of_the_remote_server'" >> ~/.bash_aliases && source ~/.bashrc
---------------------------------
# suspend
systemctl suspend
---------------------------------
# read first n lines from file
head -5 R.r
---------------------------------
# read all file in terminal
cat file_name
---------------------------------
# my very usefull aliases:

# added by Anaconda3 installer
export PATH="/home/home/anaconda3/bin:$PATH"

alias si='xclip -selection clipboard -t image/png -o >'
alias foxit='/home/home/opt/foxitsoftware/foxitreader/FoxitReader'
alias rm='mv -t /home/home/Desktop/Trash/'
alias cc="gcc p1.c -o p1 && ./p1"
alias jp="jupyter-notebook"
alias copyfrom="xclip -sel cli <"
alias copyto="xsel -b >"

#Note: these aliases should be writen in the end of file bashrc, opeh this file by (subl ~/.bashrc), and in the end of the file paste these lines, save file, exit, and then type on terminal (source ~/.bashrc)
----------------------------
# copy file contant to clipboard
xclip -sel cli < file_name
NOTE: if you use (>) rather then (<) then all file contant will be removed. so give this command your attention.
----------------------------
# create a new file with cantant in clipboard.
xsel -b > some.txt
----------------------------
# add lines to end of file
echo 'VNCSERVERS="1:root"' >> filename

# Possibility2:
echo "blablabla
blablabla
blablabla >> filename
----------------------------

# cp file from another direcotry to currect directory
eg:
cp /blabla/blabla/bla.txt . # this <.> mean current directroy
------------------------

# ls for current and subdirectories
ls *
-------------------------
combine two commands whith && or ;
let us say you need to creat a derctory <folder> and then go into that directory, usually we solve this problam by two commands in two lines, we can write these two commands in one line saparated by <&&>:

so:

mkdir folder
cd folder/ 
 
same as:
mkdir folder && cd folder/

and same as:
mkdir folder ; cd folder/
--------------------------
> frmoe everything in file and add current input
eg:
ls > a.txt
yahan agar a.txt exist nahi karti ho gi to ban jay gi or us me <ls> ka result save ho jay ga. or agar file exist karti ho gi to us ka sara contant delete ho jay ga or <ls> ka result us me save ho jay ga.

>> append k lye use hota h.
eg:
ls >> b.txt
yahan, agar b.txt exist karti ho gi to us k aakhir me <ls> ka result save ho jay ga, or agar nahi exist karti ho gi to new file ban jay gi jis me <ls> ka result save ho jay ga.
--------------------------
create empty file:
> a.txt
> b.py
--------------------------
murgin +1 files:
cat file_1.txt, file_2.txt... file_n.txt > new_file.txt

now new_file.txt contain contant of all n files.
--------------------------
for creating a small text file, we should use cat.
let us see we need to store one line text in file. usually we done this job by oppining the text editor, typing our line and save the file, we can do the same via cat. so:
cat > file.txt
# now want to type what we want to store, after typing we press CTRL+D. now we have file named file.txt contain text that we typed between <cat > file.txt> and <CTRL+D)
--------------------------

# cout file lines:
wc -l filename
---------------------------

# go to folder in home directory
cd ~/Desktop/ 
# it is equal to cd /home/amir/Desktop/ 
---------------------------
# google search query from command line
firefox google.com/search?q="query you want
---------------------------

# only lines that contains specific text
cat file_name.txt | grep text_you_want_to_search

# only files that contain (statistics) in these names
du -sh *statistics*

