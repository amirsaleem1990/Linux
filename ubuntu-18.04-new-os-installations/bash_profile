# PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# PS1='\[\e]0;\u@\h: \w\a\]\e[7m\D{%d-%b}|\t\e[27m:\w\$ '
# PS1='\[\e]0;\w\a\]\e[7m\D{%d-%b}|\t\e[27m:\w\$ '
# PS1='\[\e]0;\w\a\]\e[7m\D{%d-%b}|\t\e[27m:\e[1m\w\e[21m\033[00m\]\$ '
RED="\033[0;31m"
NORMAL="\033[0m"

PS1='\[\e]0;\u@\h: \w\a\]\[\033[01;32m\]\D{%d-%b}|\t:\[\033[01;34m\]\w\[\033[00m\]\$ '

alias Alias_backup='alias > _alias_temp ; diff _alias_temp github/Linux/alias  | grep ^\< | sed '\''s/^< //g'\'' > _alias_tempp; cat _alias_tempp >> github/Linux/alias; rm -f _alias_temp*'
alias Atom='atom'
alias NL_down='blugon --setcurrent="-500"'
alias NL_up='blugon --setcurrent="+500"'
# alias Youtube_480='youtube-dl -f '\''bestvideo[height<=480]+bestaudio/best[height<=480]'\'''
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias c='rm c_program; gcc -o c_program c_program.c ; ./c_program'
alias c_p='cd ~/github/C-programming-A_Modern_Approach-book-Exercises-/ ; subl c_program.c ; (gopen *.pdf &); gnome-terminal ; (jl *.ipynb &) ; sleep 3; exit'
alias c_server='read -p '\''Enter last 3 digits from server IP address: '\'' ip;  sudo ssh lfd-server@192.168.8.'
alias c_subl='subl && sleep 3 && wmctrl -r :ACTIVE: -e 0,0,0,1960,660'
alias calc='gcalccmd'
alias copyfrom='xclip -sel cli <'
# alias copyto='xsel -b >'
alias cpu_info='cat /proc/cpuinfo | grep '\''model name'\'' | uniq ; echo -en '\''Cores           : 8\n'\'''
alias current_wifi_name='echo yes:Jazz-LTE-438A | sed '\''s/yes://g'\'''
alias d='du -sh -B M * | sort -nr'
alias dropbox_sync='~/.dropbox-dist/dropboxd'
alias eclipse='/home/amir/eclipse/java-2020-03/eclipse/eclipse'
alias egrep='egrep --color=auto'
alias facebook-links='/home/amir/github/Daily_facebook/facebook-links.py'
alias fgrep='fgrep --color=auto'
alias freemem='cat /proc/meminfo | grep -i '\''inactive:\|memfree:'\'''
alias g='read a; firefox google.com/search?q="$a"; sleep 2; exit'
alias grep='grep --color=auto'
alias h1-zong='nmcli d w c H1-Zong password wifi@lfd'
alias hotspot='nmcli device wifi hotspot con-name Amir-hotspot ssid Amir-hotspot band bg password password123'
alias i='ipython3'
alias jazz='nmcli d w c Jazz-LTE-438A password 34969900'
alias jazz_3='nmcli d w c Jazz-LTE-33ED password 78384606'
alias jl='jupyter-lab'
alias jn='jupyter-notebook'
alias jp='jupyter-notebook'
alias l='ls -CF'
alias la='ls -A'
alias lfd_jazz='nmcli d w c lfd_jazz password lfd@12345'
alias ll='ls -latr'
alias ls='ls --color=auto -F'
alias mv='mv -i'
alias J="python3 manage.py runserver"
alias open-facebook-links='/home/amir/github/Daily_facebook/open_fb_links.py'
alias p='python3 -c '\''t=input(); print(eval(t))'\'''
# alias pdf='(feh ~/Dropbox/pics/while-reading-pdf-on-15inch-laptop.png &)'
alias pin='python3 /home/amir/github/Amir-personal/PIN/pin2.py'
alias ping='ping 8.8.8.8'
alias pwd_current_directory_to_clipboad='echo -n "`pwd`" | xclip -sel cli'
alias pycharm='cd /opt/pycharm-community-2019.3/bin; ./pycharm.sh'
alias rm='mv -f -t ~/.local/share/Trash/files 2>/dev/null'
alias sharjeel='bash ~/awesome-sharjeel-wifi-connect.wifi'
# alias si='xclip -selection clipboard -t image/png -o >'
alias sqlectron='/usr/Sqlectron-1.30.0/sqlectron'
alias telenor='nmcli d w c Telenor\ 4G-D9BF password 91423958'
alias tor='cd /etc/tor-browser_en-US; ./start-tor-browser.desktop'
alias tu='trans :ur'
alias u='del -rf /home/amir/db/*; del -rf /home/amir/Script/logs.csv; del -rf /home/amir/Script/logs.pkl'
alias wl='nmcli d w r; sleep 10; nmcli d w l'
alias z='ls *.mp4 -1'
alias zong2='nmcli d w c ZONG\ MBB-E5573-2592 password 78624687'
alias zongd='nmcli d w c ZONG\ MBB-E5573-D164 password 34886114'
alias stop_qualys="[[ $(/usr/sbin/service qualys-cloud-agent status 2>/dev/null| grep 'Active: inactive (dead)' | wc -l) -eq 0 ]] &&  sudo /usr/sbin/service qualys-cloud-agent  stop"
# alias youtube-dl="while :; do /usr/local/bin/youtube-dl -t ; done"
# alias j="for i in `ps aux | grep manage | grep -v color=auto | grep manage.py | sed 's/\ \{1,\}/,/g' | cut -d, -f2`; do kill $i ; done; python manage.py  runserver &  sleep 1s; firefox http://127.0.0.1:8000/"
alias vpn_g="echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/Programs/VPN/vpnbook-pl226-udp53.ovpn --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt" 
alias symbolic_links="ls -l | grep ^l"
alias Latex="cd github/Amir-personal/Resume/Latex-resume/; echo R | latex -output-format pdf amir-saleem-data-science-resume.tex; if [[ $? -eq 0 ]] ; then evince amir-saleem-data-science-resume.pdf; fi"
alias jango="/home/amir/github/virtual_envs/auto_eda/bin/python3 /home/amir/github/LFD_projects_6/36-EDA_tool/audo_eda_modeling_app/manage.py runserver"
#alias Latex="echo R | latex -output-format pdf resume.tex"
alias vpn_LFD="sudo openvpn --config /home/amir/github/*/amirsaleem_2.ovpn"
alias android-studio="/home/amir/Downloads/android-studio/bin/studio.sh"
alias gpt3="/amir_bin/chatgpt"


PATH="$PATH:/amir_bin:/home/amir/.local/bin:/home/amir/github/Kids_Vids"
export PYTHONPATH="/amir_bin/:/usr/lib/python3.8/"
bind '"\C-p": "\C-e\C-u xclip -sel cli <<"EOF"\n\C-y\nEOF\n\C-y"'

# commit <HISTSIZE> in .bashrc
HISTSIZE=1000000
# commit <HISTFILESIZE> in .bashrc
HISTFILESIZE=-1


# if ! [[ "$(ps -p $(ps -p $(echo $$) -o ppid=) -o comm=)" =~ 'bicon'* ]]; then
#   bicon.bin
# fi

declare -f Youtube_dl
Youtube_dl() {
    echo -e "\n\nThere are other `echo $(ps aux | grep youtube-dl | wc -l)-1|bc` youtube-dl downloading jobs running\n\n"
    while :; do
        echo -e "\n\n*************** New attempt ***************\n\n" 
        $(which youtube-dl) $1
        if [[ $? -eq 0 ]] ; then 
            return 1
        fi
    done
}

declare -f poweroff
poweroff() {

    /amir_bin/battery
    test -e /home/amir/.firefox_backups/
    if [[ $? -ne 0 ]]; then
        echo -e "\nThe folder `/home/amir/.firefox_backups/` is not exist, please create it first..."
        reaturn 1
    fi
    directory="/home/amir/.firefox_backups/`date +%D_%T | sed "s/\//-/g"`"
    cp -rv  /home/amir/.mozilla/firefox/*.default-release/sessionstore-backups "$directory"
    lz4jsoncat $(locate recovery.jsonlz4 | grep -v _) | jq -r '.windows[].tabs[].entries[-1].url' > "$directory/OPNED_URLS.txt"
    echo -e "\n\nHave you puched out? [yes|no] " 
    read ans
    if [[ $ans == "yes" ]] ; then
        /sbin/poweroff
    else
        android-studio
    fi
}

declare -f rdfind
rdfind(){

    if [[ `find . -maxdepth 1  -printf '%u:'  | cut -d: -f1` == 'root' ]]; then 
        echo -e '\n\nThe current folder is in root ownership, please run\nsudo /usr/bin/rdfind .\n'
    else 
        free_space_in_current_directory=$(df -BM | grep `df -P . | sed -n '$s/[[:blank:]].*//p'` | sed 's/ \{1,\}/,/g' | cut -d, -f4  | cut -dM -f1)
        if [[ $free_space_in_current_directory -lt 1000 ]]; then
            echo -e "\nSorry, There is only $free_space_in_current_directory MB left in current partition\nExitting ........\n\n"
            return 1
        fi 
        /usr/bin/rdfind .
        if [[ $(cat results.txt | grep -v ^\# | wc -l) -eq 0 ]]; then
            rm -f results.txt
            echo -e "${RED}\n\nNo duplicate file\n\n${NORMAL}"
            return 0
        fi

        /amir_bin/rdfind_analysis

    fi 
}

# day_of_week=`date +%u`
# if   [[ $day_of_week = 6 ]] ; then
#     poweroff
# elif [[ $day_of_week = 7 ]] ; then
#     if [[ `date +%H | sed 's/^0//g'` < 21 ]] ; then
#         poweroff
#     fi
# fi

declare -f calculator
calculator(){
    expression=$1
    if [[ -z $expression ]]; then
        read -p "Enter you expression: " expression
    fi
    x=$(bc <<< "scale=4; $expression")
    if [[ "${x:0:1}" == "." ]]; then
        echo 0$x
    else
        echo $x
    fi
}

declare -f calculator_while_loop
calculator_while_loop(){
    while :; do
        echo ''
        read -p "Enter you expression: " expression
        calculator "$expression"
    done
}

declare -f VPN
VPN(){
    (yes | naclient login -user  $Kashat_user -password $kashat_password -profile "$kashat_profile" >/dev/null 2>&1)
}

declare -f copyto
copyto(){
    test -f "$1"
    if [[ $? -eq 0 ]]; then
        echo -e "\nSorry, the file is exists\nAborting ......\n\n"
        return 1
    fi
    xsel -b > ~/.temp_copy
    echo -e "$(cat ~/.temp_copy)\n" > "$1"
}

declare -f si
si(){
    file_name="$1"
    
    if [[ -z $file_name ]] ; then
        # echo "\nPlease Enter file name, (eg: si my_file_name\n"
        # return 1
        if [[ $( ls *.png | sed 's/\.png$//g' | sed  '/[^[:digit:].+-]/d' | wc -l) -eq 0 ]]; then
            file_name=1
        else
            file_name=$(max $(ls *.png | sed 's/\.png$//g' | sed  '/[^[:digit:].+-]/d'))
            let "file_name++"
        fi
        echo -e "\nYou didn't provide a file name, so we are saving it as <$file_name.png>\n"
    fi

    test -f "$file_name"
    res_0=$?
    test -f "$file_name.png"
    res_1=$?
    if [[ $res_0 -eq 0 ]] || [[ $res_1 -eq 0 ]]; then
        echo -e "\nSorry, the file is exists\n"
        if [[ $(ls *.png | wc -l) -gt 0 ]] ; then
            echo -e "Currently saved .pngs are:\n-------------------\n`ls *.png`\n\n\nAborting ......\n\n"
        fi
        return 1
    fi
    xclip -selection clipboard -t image/png -o > "$file_name.png"
}


declare -f max
max(){
    float_exists=$(echo "$@" | grep -o '\.' | wc -l)
    if [[ $float_exists > 0 ]]; then
        echo -e "\nSorry, There is a float in provided numbers, please provide ONLY INTEGERS\nAborting........\n" 
        return 1
    fi
    if [[ -z $@ ]]; then
        echo -e "\nPlease provide multiple numbers\nAborting......."
        return 1
    fi
    max=-100000
    for i in $@ ; do
        if [[ $i -gt max ]]; then
            max=$i
        fi
    done
    echo $max
}

declare -f pwd_print
pwd_print(){
    x=$(eval "pwd")
    echo -n "'$x/$1'" | xclip -sel clip
    if [[ $? -eq 0 ]]; then
        echo -e "\nCopied to clipboard\n"
    fi
}

declare -f kill_youtube
kill_youtube() {
    if [[ $( ps aux | grep youtube-dl |wc -l) -ne 2 ]]; then
        echo -e "\nThere are more than one youtube-dl session"
       return 1
    fi
    kill $(ps aux | grep youtube-dl | head -n1 | sed 's/\ \{1,\}/,/g' | cut -d, -f2)
    if [[ $? -eq 0 ]]; then
        echo -e "\n\nyoutube-dl session killed successfully\n"
    else
        echo -e "\n\nAn error occured during killing youtube-dl sessson"
    fi
}


declare -f DEL
DEL(){
    RED="\033[0;31m"
    NC='\033[0m' 
    echo -e "\nAre you need to Remove the following: [yes|no]"
    echo -e "${RED}NOTE: This is the $(pwd) direcotry${NC}\n"
    for i in "$@"; do
        echo "$i"
    done
    read ans
    if [[ $ans == "yes" ]]; then
        /amir_bin/DEL "$@"
    fi
}

# declare -f rm
# rm() {
#     mv -f "$@" ~/.local/share/Trash/files/
#     if [[ $? -ne 0 ]] ; then 
#         /usr/bin/rm -rf "~/.local/share/Trash/file/$@"
#     fi
#     mv "$@" ~/.local/share/Trash/files
# }

# declare -f pylint_amir
# pylint_amir(){
#     pylint --msg-template='{msg_id}:{line:3d}:{column}:{msg}' "$1"  | grep "^[A-Za-z-]" | head -n -2 | sort -k1,4 -s
# }


declare -f pylint_only_errors
pylint_only_errors(){
    pylint --errors-only "$1"
}

declare -f change_PS1
change_PS1(){
    PS1="$PS1\n>>> "
    export "$PS1" 2>/dev/null
}

declare -f swap_off
swap_off() {
    cat /home/amir/github/*/._mz_ | sudo -S -k swapoff -a
}


declare -f ADB
ADB() {
    adb tcpip 5555
    read -p "Enter any key after allow in mobile: "
    adb connect `adb shell ifconfig wlan0 | grep 192 | cut -d: -f2 | cut -d ' ' -f1`:5555
}


declare -f Chrome_all_tabs
Chrome_all_tabs() {
    IFS=$'\n'
    cat -e `locate Current\ Session | grep chrom | sed 's/\ /\\ /g'` | sed -e 's/\^@/\n/g' -e '/_\/chrome/d' | grep -Po '(http|https)://\K.*' | sort -u
}

declare -f extentions_for_given_file_names
extentions_for_given_file_names() {
    IFS=$'\n'
    for i in "$@"; do
        basename "$i"
    done | rev | cut -d. -f1 | rev | sort | uniq -c | sort -n
}


declare -f check_duplicated_lines_count_bash
check_duplicated_lines_count_bash() {
    if [[ -z $1 ]]; then
        echo -e "No file passed\nAborting ....... \n"
        return 1
    fi
    duplicated_lines="|$(sort  "$1" | uniq -c | sed 's/^\ \{1,\}//g' | sed s'/\ /,/' | grep -v 1, | cut -d, -f2-10 | awk '{$1=$1};1' | paste -sd '\|' | sed 's/|//')"
    grep -E  --color=auto "$duplicated_lines"  "$1"
}


declare -f todays_first_computer_on_time
todays_first_computer_on_time() {
    current_date="/home/amir/.$(date +%d-%m-%y)"
    test -e "$current_date"
    if [[ $? -ne 0 ]]; then
        current_time=$(date +%s)
        echo "$current_time" > "$current_date"
    fi
}


declare -f time_since_first_login_today
time_since_first_login_today() {
    current_date="/home/amir/.$(date +%d-%m-%y)"
    first_login_time=$(cat "$current_date")
    echo -e "\nHH:MM:SS\n$(date -d@$(cat $current_date ) +%T):\tTodays first log-in time"
    current_time=$(date +%s)
    time_pased="$((current_time-first_login_time))"
    convertsecs $time_pased
}



declare -f internet_speed
internet_speed() {
    ifstat -i wlp3s0
}


declare -f convertsecs
convertsecs() {
    integet=${1%.*}
    ((y=${integet}/31536000))
    ((d=${integet}%31536000/86400))
    ((h=${integet}%86400/3600))
    ((m=(${integet}%3600)/60))
    ((s=${integet}%60))
    x=$(printf "%02d:%02d:%02d:%02d:%02d" $y $d $h $m $s)
    # echo -e "YY:DD:HH:MM:SS\n$x" | column -t -s\:
    echo "$x"
}


declare -f free_space_on_current_partition
free_space_on_current_partition(){
    df -Ph . | tail -n1  | sed 's/\ \{1,\}/,/g' | cut -d, -f4
}


declare -f pickle_show_head
pickle_show_head() {
x="import pandas as pd; print(pd.read_pickle('"$1"').head())"
echo "$x" | python3
}


declare -f pickle_show_nrows
pickle_show_nrows() {
x="import pandas as pd; print(pd.read_pickle('"$1"').shape[0])"
echo "$x" | python3
}


declare -f pickle_show_content
pickle_show_content() {
x="import pickle; print(pickle.load(open('"$1"', 'rb')))"
echo "$x" | python3
}


declare -f pickle_read_dataframe_and_go_in_inpython
pickle_read_dataframe_and_go_in_inpython() {
    python_code="import pandas as pd; df = pd.read_pickle('"$1"'); "
    echo "$python_code" > /tmp/python_code
    echo -e "\n>>>>>>>>>> Your file is imported as 'df', your can use it<<<<<<<<<<\n"
    ipython3 -i  /tmp/python_code
}


declare -f pickle_list_columns_names
pickle_list_columns_names() {
    python_code="import pandas as pd; print(*pd.read_pickle('"$1"').columns.to_list(), sep='\n')"
    echo $python_code | python3
}


declare -f download_speed_stream
download_speed_stream(){ 
    total=1
    avg_speed=1
    start_time=$(date +%s)
    n=0
    sleep 1s
    echo -e '\n\n\n\n\n\n\n\n\n\n\n\n\n'
    wifi_chip_name=$(ifconfig  | grep ^wlp | cut -d: -f1)
    while :; do 
        let "n+=1"
        # echo -e "\n\n-------------------"
        # sleep 1s
        current_time=$(date +%s)
        time_passed_sec=$((current_time-start_time))
        time_passed=$(convertsecs $time_passed_sec)

        download_speed=$(ifstat -i "$wifi_chip_name" 1s 1 | awk 'NR==3 {print $1}')
        if [[ "$download_speed" == "n/a" ]] ; then
            sleep 1s
            continue
        fi
        # if [[ $download_speed>1 ]]; then
        #     download_speed=${download_speed%.*}
        # fi

        total=$(echo "$total+$download_speed"|bc -l)
        # total_int=${total%.*}
        # total_int=$(size_in_proper_units $total_int)

        # avg_speed=$(echo "scale=1; $total/$time_passed_sec"|bc -l)
        avg_speed=$(echo "scale=1; $total/$n"|bc -l)
        # avg_speed_int=${avg_speed%.*}
        # avg_speed_int=$(size_in_proper_units $avg_speed_int)

        echo -n "          "
        echo -e '\e[14A\e[K'
        # echo "$(banner $download_speed)" #8
        toilet -f smmono12 $download_speed #11
        echo -e "YY:DD:HH:MM:SS\n$time_passed"
        # echo -e "Total: $total_int\t Avg: $avg_speed"
        echo -e "Avg: $avg_speed"
    done
}

declare -f size_in_proper_units
size_in_proper_units (){
    # Assumption: This function will get an input in KBs
    x=$(echo $1'>'1000000 | bc -l)
    if [[ $x -eq 1 ]]; then
        r=$(echo "scale=3; $1/1000000" | bc -l)
        echo "$r G"
    else
        x=$(echo $1'>'1000 | bc -l)
        if [[ $x -eq 1 ]]; then
            r=$(echo "scale=1; $1/1000" | bc -l)
            echo "$r M"
        else
            echo "$1 K"
        fi
    fi

}

declare -f pdf
pdf() {
    feh ~/Dropbox/pics/while-reading-pdf-on-15inch-laptop.png &
}

declare -f pickle_to_csv
pickle_to_csv() {
    # read -p "Enter csv file name: " csv_file_name
    csv_file_name="$1.csv"
    while : ; do 
        test -e "$csv_file_name"
        if [[ $? -ne 0 ]]; then
            break
        fi 
    done
    
    x="from pandas import read_pickle; read_pickle(open('"$1"', 'rb')).to_csv('"$csv_file_name"')"
    echo "$x" | python3
}


declare -f beep
beep() {
    #play -n synth 1.0 sine 1000
    play -n synth 0.5 sine 500
}


# alias vpn_g_1='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca198-tcp443.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_2='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca198-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_3='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca198-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_4='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca198-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_5='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca222-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_6='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca222-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_7='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/ca222-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_8='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/de4-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_9='echo https://www.vpnbook.com/; sudo openvpn  --config /home/amir/Downloads/VPNs/de4-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_10='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/de4-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_11='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/de4-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_12='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr1-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_13='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr1-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_14='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr1-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_15='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr8-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_16='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr8-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_17='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr8-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_18='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/fr8-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_19='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/pl226-tcp443.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_20='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/pl226-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_21='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/pl226-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_22='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/pl226-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_23='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us1-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_24='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us1-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_25='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us1-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_26='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us1-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_27='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us2-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_28='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us2-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_29='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us2-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
# alias vpn_g_30='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPNs/us2-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_1=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca198-tcp443.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_2=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca198-tcp80.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_3=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca222-tcp443.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_4=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca222-tcp80.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_5=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-de4-tcp443.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_6=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-de4-tcp80.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_7=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr1-tcp443.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_8=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr1-tcp80.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_9=' echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr8-tcp443.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_10='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr8-tcp80.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_11='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-pl226-tcp443.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_12='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-pl226-tcp80.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_13='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us1-tcp443.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_14='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us1-tcp80.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_15='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us2-tcp443.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_16='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us2-tcp80.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_17='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca198-udp25000.ovpn --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_18='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca198-udp53.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_19='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca222-udp25000.ovpn --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_20='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-ca222-udp53.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_21='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-de4-udp25000.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_22='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-de4-udp53.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_23='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr1-udp25000.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_24='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr1-udp53.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_25='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr8-udp25000.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_26='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-fr8-udp53.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_27='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-pl226-udp25000.ovpn --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_28='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-pl226-udp53.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_29='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us1-udp25000.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_30='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us1-udp53.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_31='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us2-udp25000.ovpn   --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_32='echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/VPN2s/vpnbook-us2-udp53.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'


































change_PS1
todays_first_computer_on_time
time_since_first_login_today

export -f extentions_for_given_file_names
export -f si
export -f max
export -f internet_speed
export -f convertsecs
export -f free_space_on_current_partition
export -f pickle_show_head
export -f pickle_show_nrows
export -f pickle_show_content
export -f pickle_read_dataframe_and_go_in_inpython
export -f pickle_list_columns_names
export -f download_speed_stream
export -f size_in_proper_units
export -f pickle_to_csv
export -f pdf
export -f beep

export RED="\033[0;31m"
export NORMAL="\033[0m"
# export NONE='\033[00m'
# export RED='\033[01;31m'
export GREEN='\033[01;32m'
export YELLOW='\033[01;33m'
export PURPLE='\033[01;35m'
export CYAN='\033[01;36m'
export WHITE='\033[01;37m'
export BOLD='\033[1m'
export UNDERLINE='\033[4m'





