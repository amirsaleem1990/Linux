# PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# PS1='\[\e]0;\u@\h: \w\a\]\e[7m\D{%d-%b}|\t\e[27m:\w\$ '
# PS1='\[\e]0;\w\a\]\e[7m\D{%d-%b}|\t\e[27m:\w\$ '
# PS1='\[\e]0;\w\a\]\e[7m\D{%d-%b}|\t\e[27m:\e[1m\w\e[21m\033[00m\]\$ '
RED="\033[0;31m"
NORMAL="\033[0m"

PS1='\[\e]0;\u@\h: \w\a\]\[\033[01;32m\]\D{%d-%b}|\t:\[\033[01;34m\]\w\[\033[00m\]\$ '

alias Alias_backup='alias > _alias_temp ; diff _alias_temp github/Linux/alias  | grep ^\< | sed '\''s/^< //g'\'' > _alias_tempp; cat _alias_tempp >> github/Linux/alias; rm -f _alias_temp*'
alias Atom='atom'
alias NL_down='blugon --setcurrent="-500"'
alias NL_up='blugon --setcurrent="+500"'
# alias Youtube_480='youtube-dl -f '\''bestvideo[height<=480]+bestaudio/best[height<=480]'\'''
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias c='rm c_program; gcc -o c_program c_program.c ; ./c_program'
alias c_p='cd ~/github/C-programming-A_Modern_Approach-book-Exercises-/ ; subl c_program.c ; (gopen *.pdf &); gnome-terminal ; (jl *.ipynb &) ; sleep 3; exit'
alias c_server='read -p '\''Enter last 3 digits from server IP address: '\'' ip;  sudo ssh lfd-server@192.168.8.'
alias c_subl='subl && sleep 3 && wmctrl -r :ACTIVE: -e 0,0,0,1960,660'
alias calc='gcalccmd'
alias copyfrom='xclip -sel cli <'
# alias copyto='xsel -b >'
alias cpu_info='cat /proc/cpuinfo | grep '\''model name'\'' | uniq ; echo -en '\''Cores           : 8\n'\'''
alias current_wifi_name='echo yes:Jazz-LTE-438A | sed '\''s/yes://g'\'''
alias d='du -sh -B M * | sort -nr'
alias dropbox_sync='~/.dropbox-dist/dropboxd'
alias eclipse='/home/amir/eclipse/java-2020-03/eclipse/eclipse'
alias egrep='egrep --color=auto'
alias facebook-links='/home/amir/github/Daily_facebook/facebook-links.py'
alias fgrep='fgrep --color=auto'
alias freemem='cat /proc/meminfo | grep -i '\''inactive:\|memfree:'\'''
alias g='read a; firefox google.com/search?q="$a"; sleep 2; exit'
alias grep='grep --color=auto'
alias h1-zong='nmcli d w c H1-Zong password wifi@lfd'
alias hotspot='nmcli device wifi hotspot con-name Amir-hotspot ssid Amir-hotspot band bg password password123'
alias i='ipython3'
alias jazz='nmcli d w c Jazz-LTE-438A password 34969900'
alias jazz_3='nmcli d w c Jazz-LTE-33ED password 78384606'
alias jl='jupyter-lab'
alias jn='jupyter-notebook'
alias jp='jupyter-notebook'
alias l='ls -CF'
alias la='ls -A'
alias lfd_jazz='nmcli d w c lfd_jazz password lfd@12345'
alias ll='ls -latr'
alias ls='ls --color=auto -F'
alias mv='mv -i'
alias open-facebook-links='/home/amir/github/Daily_facebook/open_fb_links.py'
alias p='python3 -c '\''t=input(); print(eval(t))'\'''
alias pdf='(feh ~/Dropbox/pics/while-reading-pdf-on-15inch-laptop.png &)'
alias pin='i /home/amir/github/Amir-personal/PIN/pin2.py'
alias ping='ping 8.8.8.8'
alias pwd_current_directory_to_clipboad='echo -n "`pwd`" | xclip -sel cli'
alias pycharm='cd /opt/pycharm-community-2019.3/bin; ./pycharm.sh'
alias rm='yes y | mv -t ~/.local/share/Trash/files'
alias sharjeel='bash ~/awesome-sharjeel-wifi-connect.wifi'
# alias si='xclip -selection clipboard -t image/png -o >'
alias sqlectron='/usr/Sqlectron-1.30.0/sqlectron'
alias telenor='nmcli d w c Telenor\ 4G-D9BF password 91423958'
alias tor='cd /etc/tor-browser_en-US; ./start-tor-browser.desktop'
alias tu='trans :ur'
alias u='del -rf /home/amir/db/*; del -rf /home/amir/Script/logs.csv; del -rf /home/amir/Script/logs.pkl'
alias wl='nmcli d w r; sleep 10; nmcli d w l'
alias z='ls *.mp4 -1'
alias zong2='nmcli d w c ZONG\ MBB-E5573-2592 password 78624687'
alias zongd='nmcli d w c ZONG\ MBB-E5573-D164 password 34886114'
alias stop_qualys="[[ $(/usr/sbin/service qualys-cloud-agent status | grep 'Active: inactive (dead)' | wc -l) -eq 0 ]] &&  sudo /usr/sbin/service qualys-cloud-agent  stop"
# alias youtube-dl="while :; do /usr/local/bin/youtube-dl -t ; done"
# alias j="for i in `ps aux | grep manage | grep -v color=auto | grep manage.py | sed 's/\ \{1,\}/,/g' | cut -d, -f2`; do kill $i ; done; python manage.py  runserver &  sleep 1s; firefox http://127.0.0.1:8000/"
alias vpn_g="echo https://www.vpnbook.com/; sudo openvpn --config /home/amir/Downloads/Programs/VPN/vpnbook-pl226-udp53.ovpn --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt" 

alias Latex="echo R | latex -output-format pdf resume.tex; evince resume.pdf"
#alias Latex="echo R | latex -output-format pdf resume.tex"



PATH=$PATH:/amir_bin:/home/amir/.local/bin:/home/amir/github/Kids_Vids
export PYTHONPATH="/amir_bin/:/usr/lib/python3.8/"
bind '"\C-p": "\C-e\C-u xclip -sel cli <<"EOF"\n\C-y\nEOF\n\C-y"'

# commit <HISTSIZE> in .bashrc
HISTSIZE=1000000
# commit <HISTFILESIZE> in .bashrc
HISTFILESIZE=-1


# if ! [[ "$(ps -p $(ps -p $(echo $$) -o ppid=) -o comm=)" =~ 'bicon'* ]]; then
#   bicon.bin
# fi

declare -f Youtube_dl
Youtube_dl() {
    echo -e "\n\nThere are other `echo $(ps aux | grep youtube-dl | wc -l)-1|bc` youtube-dl downloading jobs running\n\n"
    while :; do
        echo -e "\n\n*************** New attempt ***************\n\n" 
        /usr/local/bin/youtube-dl $1
        if [[ $? -eq 0 ]] ; then 
            return 1
        fi
    done
}

declare -f poweroff
poweroff() {

    /amir_bin/battery

    read -p "Are you punched out? [yes|no]: " ans
    cp -rv  /home/amir/.mozilla/firefox/*.default-release/sessionstore-backups /home/amir/.firefox_backups/`date +%D_%T | sed "s/\//-/g"`
    if [[ $ans == "yes" ]] ; then 
        /sbin/poweroff
    elif [[ $ans == "no" ]]; then 
        /home/amir/H/manually_login_on_hrm_tool.py 1
        if [[ $? -eq 0 ]] ;then 
            sleep 4s
            /sbin/poweroff
        else 
            echo -e "\n\nAn error occured\n\n"
        fi
    else 
        echo -e "\n\nError: wrong input,\nExiting .........\n"
    fi
}

declare -f rdfind
rdfind(){

    if [[ `find . -maxdepth 1  -printf '%u:'  | cut -d: -f1` == 'root' ]]; then 
        echo -e '\n\nThe current folder is in root ownership, please run\nsudo /usr/bin/rdfind .\n'
    else 
        free_space_in_current_directory=$(df -BM | grep `df -P . | sed -n '$s/[[:blank:]].*//p'` | sed 's/ \{1,\}/,/g' | cut -d, -f4  | cut -dM -f1)
        if [[ $free_space_in_current_directory -lt 1000 ]]; then
            echo -e "\nSorry, There is only $free_space_in_current_directory MB left in current partition\nExitting ........\n\n"
            return 1
        fi 
        /usr/bin/rdfind .
        if [[ $(cat results.txt | grep -v ^\# | wc -l) -eq 0 ]]; then
            rm -f results.txt
            echo -e "${RED}\n\nNo duplicate file\n\n${NORMAL}"
        fi
    fi 
}

# day_of_week=`date +%u`
# if   [[ $day_of_week = 6 ]] ; then
#     poweroff
# elif [[ $day_of_week = 7 ]] ; then
#     if [[ `date +%H | sed 's/^0//g'` < 21 ]] ; then
#         poweroff
#     fi
# fi

declare -f calculator
calculator(){
    expression=$1
    if [[ -z $expression ]]; then
        read -p "Enter you expression: " expression
    fi
    x=$(bc <<< "scale=4; $expression")
    if [[ "${x:0:1}" == "." ]]; then
        echo 0$x
    else
        echo $x
    fi
}

declare -f calculator_while_loop
calculator_while_loop(){
    while :; do
        echo ''
        read -p "Enter you expression: " expression
        calculator "$expression"
    done
}

declare -f VPN
VPN(){
    (yes | naclient login -user  $Kashat_user -password $kashat_password -profile "$kashat_profile" >/dev/null 2>&1)
}

declare -f copyto
copyto(){
    test -f "$1"
    if [[ $? -eq 0 ]]; then
        echo -e "\nSorry, the file is exists\nAborting ......\n\n"
        return 1
    fi
    xsel -b > ~/.temp_copy
    echo -e "$(cat ~/.temp_copy)\n" > "$1"
}

declare -f si
si(){
    file_name="$1"
    
    if [[ -z $file_name ]] ; then
        # echo "\nPlease Enter file name, (eg: si my_file_name\n"
        # return 1
        if [[ $( ls *.png | sed 's/\.png$//g' | sed  '/[^[:digit:].+-]/d' | wc -l) -eq 0 ]]; then
            file_name=1
        else
            file_name=$(max $(ls *.png | sed 's/\.png$//g' | sed  '/[^[:digit:].+-]/d'))
            let "file_name++"
        fi
        echo -e "\nYou don't provided a file name, so we saved it as <$file_name.png>\n"
    fi

    test -f "$file_name"
    res_0=$?
    test -f "$file_name.png"
    res_1=$?
    if [[ $res_0 -eq 0 ]] || [[ $res_1 -eq 0 ]]; then
        echo -e "\nSorry, the file is exists\n"
        if [[ $(ls *.png | wc -l) -gt 0 ]] ; then
            echo -e "Currently saved .pngs are:\n-------------------\n`ls *.png`\n\n\nAborting ......\n\n"
        fi
        return 1
    fi
    xclip -selection clipboard -t image/png -o > "$file_name.png"
}


declare -f max
max(){
    float_exists=$(echo "$@" | grep -o '\.' | wc -l)
    if [[ $float_exists > 0 ]]; then
        echo -e "\nSorry, There is a float in provided numbers, please provide ONLY INTEGERS\nAborting........\n" 
        return 1
    fi
    if [[ -z $@ ]]; then
        echo -e "\nPlease provide multiple numbers\nAborting......."
        return 1
    fi
    max=-100000
    for i in $@ ; do
        if [[ $i -gt max ]]; then
            max=$i
        fi
    done
    echo $max
}

declare -f pwd_print
pwd_print(){
    x=$(eval "pwd")
    echo -n "'$x/$1'" | xclip -sel clip
    if [[ $? -eq 0 ]]; then
        echo -e "\nCopied to clipboard\n"
    fi
}

declare -f kill_youtube
kill_youtube() {
    if [[ $( ps aux | grep youtube-dl |wc -l) -ne 2 ]]; then
        echo -e "\nThere are more than one youtube-dl session"
       return 1
    fi
    kill $(ps aux | grep youtube-dl | head -n1 | sed 's/\ \{1,\}/,/g' | cut -d, -f2)
    if [[ $? -eq 0 ]]; then
        echo -e "\n\nyoutube-dl session killed successfully\n"
    else
        echo -e "\n\nAn error occured during killing youtube-dl sessson"
    fi
}


declare -f DEL
DEL(){
    echo -e "\nAre you need to proceed with the command < DEL $@ > ? yes|no "
    read ans
    if [[ $ans == "yes" ]]; then
        /amir_bin/DEL "$@"
    fi
}

# declare -f rm
# rm() {
    # mv "$@" ~/.local/share/Trash/files/
    # if [[ $? -ne 0 ]] ; then 
    #     DEL -rf "~/.local/share/Trash/file/$@"
    # fi
    # mv "$@" ~/.local/share/Trash/files
# }



alias vpn_g_1='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca198-tcp443.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_2='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca198-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_3='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca198-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_4='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca198-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_5='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca222-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_6='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca222-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_7='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/ca222-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_8='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/de4-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_9='echo https://www.vpnbook.com/; sudo openvpn  --config /media/sdb2/Downloads/VPNs/de4-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_10='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/de4-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_11='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/de4-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_12='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr1-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_13='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr1-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_14='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr1-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_15='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr8-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_16='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr8-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_17='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr8-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_18='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/fr8-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_19='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/pl226-tcp443.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_20='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/pl226-tcp80.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_21='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/pl226-udp25000.ovpn  --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_22='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/pl226-udp53.ovpn     --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_23='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us1-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_24='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us1-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_25='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us1-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_26='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us1-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_27='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us2-tcp443.ovpn      --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_28='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us2-tcp80.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_29='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us2-udp25000.ovpn    --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'
alias vpn_g_30='echo https://www.vpnbook.com/; sudo openvpn --config /media/sdb2/Downloads/VPNs/us2-udp53.ovpn       --auth-user-pass /home/amir/Downloads/Programs/VPN/pass_file.txt'


































