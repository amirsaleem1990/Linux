#!/usr/bin/bash
/usr/bin/rm /tmp/f 2>/dev/null

(watch -d "mpstat -P ALL | awk '{print \$3, \$6}' | tail -n 9 | column -t -s' '" &)


control_c() {
	/home/amir/.venv_base/bin/python3 <<< '
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import pandas_bokeh
from bokeh.models import DatetimeTicker, PrintfTickFormatter

pandas_bokeh.output_file("/tmp/cpu_consumption_plot.html")

df = pd.read_csv("/tmp/f", header=None, names=["time", "cpu_consumption"], parse_dates=["time"], index_col=0)

# Plot the data using pandas_bokeh
plot = df.cpu_consumption.plot_bokeh(title="CPU consumption over time", kind="line", marker="-o", figsize=(1800,400))

# Adjust the x-axis tick settings
num_ticks = 40  # Set the number of desired ticks on the x-axis

# Calculate the step size for the tick interval
num_data_points = len(df.index)
tick_step = max(1, int(num_data_points / num_ticks))

# Set the x-axis ticker to be a DatetimeTicker
plot.xaxis.ticker = DatetimeTicker()

# Set the x-axis tick formatter to display time in a readable format
plot.xaxis.formatter = PrintfTickFormatter(format="%H:%M:%S")
	'
	exit
}

trap control_c SIGINT



while true; do
	mpstat -P ALL | grep all | awk '{print $1","$6}' >> /tmp/f
	sleep 2s
done