#!/usr/bin/python3
##!/usr/bin/bash

import sys
import os
from termcolor import colored

_file__ = '/home/amir/.qmi'
if os.path.exists(_file__):
	os.remove(_file__)

print("\n\n#############################################################")
os.system("echo Filesystem,Size,Used,Avail,Use%,Mounted > /home/amir/.dC")
# print(colored("", "red") + "\n-----------------------------------------------------")
os.system("df -h | grep /dev/sd | sed 's/ \{1,\}/,/g' | grep -v /efi >> /home/amir/.dC")
os.system("""cat  /home/amir/.dC | column -t -s, | grep --color "\|Filesystem\|Size\|Used\|Avail\|Use%\|Mounted" """)
print("#############################################################\n\n")

def MB_to_GB(x, round_to_n=0):
	if round_to_n == 0:
		return round(x/1024)
	else:
		return round(x/1024, round_to_n)
def m(x, add_pipe_in_last=True):
	last_ = ""
	if add_pipe_in_last:
		last_ = "|"
	return " " * (x - 2) + last_
import os
###############
mounted_at = list(os.popen("df | grep ^/dev/sd | sed 's/\ \{1,\}/,/g' | grep -v  /boot/efi | rev | cut -d, -f1 | rev"))
mounted_at = [i.strip() for i in mounted_at]

devs = list(os.popen("df | grep ^/dev/sd | sed 's/\ \{1,\}/,/g' | grep -v  /boot/efi | cut -d, -f1"))
devs = [i.strip() for i in devs]
###############


print(colored(">>>", "red") + ": Used")
print(colored("!!!", "green") + ": Unused")


########################
def bytes_to(bytes_):
	size = round(bytes_ / 1024 / 1024 / 1024)
	size_str = f"{size}G"
	if size < 1:
		size = round(bytes_ / 1024 / 1024)
		size_str = f"{size}G"
	return size_str


import shutil
r = [' , ,Total,Used,Avail,Used%,Mounted']

lst = []

for m, d in zip(mounted_at, devs):
	total, used, free = shutil.disk_usage(m) # in bytes
	total *= 0.95 # total ka 5% hissa qabil-e-istimal nahi hota
	used_perc = round(used / total * 100)#str() + "%"
	i = '>'*(used_perc//3) + "!"*((100-used_perc)//3)
	# print(total, used,free)
	total = bytes_to(total)
	used = bytes_to(used)
	free = bytes_to(free)
	lst.append([d,i,total,used,free,used_perc,m])
	# break
lst = sorted(lst, key=lambda x:x[-1])
for i in lst:
	f = f"{i[0]},{i[1]},{i[2]},{i[3]},{i[4]},{i[5]}%,{i[6]}"
	r.append(f)
open(_file__, 'w').write('\n'.join(r)+"\n")
os.system(f'cat {_file__} | column -t -s, | grep --color=auto "\|Total\|Used[%]*\|Avail\|Mounted\|>\|!"')
print()

########################
# # a = list(os.popen("df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | sort -k5 -nr")) # sorted by <used %>
# a = list(os.popen("df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g'"))
# # print(" " * (45), colored("Total  | Used  | Used  | Avail    | Mounted     ", "red", attrs=['reverse', 'bold']))
# open(_file__, 'w').write(
# 	", , ,Total,Used,Used,Avail,Mounted")
# a = sorted(a, key=lambda x:x.split()[0])
# # sys.exit()
# for b in a:

# 	total = int(b.split()[1].replace("M", ""))
# 	if total < 1000:
# 	  continue
# 	_M_ = b.split()[0][:-1]
# 	used = int(b.split()[2].replace("M", ""))
# 	avail = int(b.split()[3].replace("M", ""))
# 	used_perc = int(b.split()[4].replace("M", "").strip("%"))
# 	devided_by = 3
# 	# used_size = int(used / total * 100) // devided_by
# 	used_size = used_perc // devided_by
# 	total_size = 100 // devided_by
# 	LEN = len(b.split()[0])

# 	# print(b.split()[0], 
# 	# 	  m(12 - len(b.split()[0]), False),
# 	# 	  colored(int(used_size) * ">", "red") + 
# 	# 	  colored(int(total_size - used_size) * "!", "green"),
# 	# 	  MB_to_GB(total),  m(11- len(str(total))), 
# 	# 	  MB_to_GB(used), m(10- len(str(used))),
# 	# 	  str(round(used_size/total_size*100)) + " %", m(3),
# 	# 	  MB_to_GB(avail, 1), m(11- len(str(avail))),
# 	# 	  b.split()[-1])
# 	open(_file__, 'a').write(
# 		f"""\n{b.split()[0]},{int(used_size) * ">"}{int(total_size - used_size) * "!"},{MB_to_GB(total)},{MB_to_GB(used)},{round(used_size/total_size*100)} %,{MB_to_GB(avail, 1)},{b.split()[-1]}\n"""
# 		)
# os.system(f'cat {_file__} | column -t -s, | grep --color=auto "\|Total\|Used\|Avail\|Mounted\|>\|!"')

# os.remove("/home/amir/.dC")
# #######################################################################
# # #!/bin/bash
# # echo -e "
# # -----------------------------------------------------
# # Filesystem          Size  Used     Avail Use% Mounted
# # -----------------------------------------------------"
# # df -BG | grep /dev/sd | grep -v "1G    1G" 
# #######################################################################


# #######################################################################
# # #!/usr/bin/env ipython3
# # import os
# # os.system("df -h > temppp.txt")
# # with open("temppp.txt", "r") as file:
# #   a = file.readlines()
# # import pandas as pd
# # #pd.set_option('display.max_columns', 10)
# # columns = ["Filesystem","Size","Used","Avail","Use%", "Mounted", "on"]
# # df = pd.DataFrame([i.split() for i in a], columns=columns).drop(0)
# # avail = []
# # for i in df.Avail:
# #     if i.endswith("G"):
# #         avail.append(float(i.replace("G", "")))
# #     elif i.endswith("M"):
# #         avail.append(float(i.replace("M", ""))/1024)
# #     else:
# #         avail.append(int(i))
# # df.Avail = avail
# # import pprint
# # adf = df.query("Avail > 0").sort_values("Avail", ascending = False)
# # adf.Avail = adf.Avail.astype(int).astype(str) + " GB"
# # pprint.pprint(adf[adf.Filesystem.str.contains("/dev")].drop("on", axis=1))
# # #pprint.pprint(df.query("Avail > 0").sort_values("Avail", ascending = False))
# # os.remove("temppp.txt")




# # disk=`      df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f1`
# # total=`     df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f2 | sed s:M::g`
# # used=`      df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f3 | sed s:M::g`
# # avail=`     df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f4 | sed s:M::g`
# # use_perc=`  df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f5`
# # mounted_on=`df -BM | grep /dev/sd | sed 's/\ \{2,\}/\ /g' | cut -d' ' -f6`

# # echo $disk $total $used $avail $use_perc $mounted_on