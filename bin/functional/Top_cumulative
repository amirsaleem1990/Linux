#!/bin/bash
RED="\033[0;31m"
normal="\033[0m"
if [[ $1 == 'cpu' ]]; then
	sort_by=1
else
	if [[ $1 == 'ram' ]]; then
		sort_by=2
	else
		echo "The argument of this script is either <cpu> or <ram>."
		exit 
	fi
fi

echo ''
IFS=$'\n'

echo -e "`ps -eo user,pid,%cpu,%mem,comm  | grep amir | sed 's/amir     //g' |  grep -v '0.0  0.0' \
	| sed 's/^ //g' \
	| sed 's/ \{1,\}/ /g' | cut -d ' ' -f2-10
	`" > ~/ab.txt
	# |tee /home/amir/.a. \
	# | tac \

cat ab.txt | cut -d, -f3-5 | sed 's/ /-/g' > .last_col.txt
cat ab.txt | cut -d, -f1,2 | sed 's/ /-/g' > .first_two_cols.txt

# paste .first_two_cols.txt  .last_col.txt > ab.txt
# cat ab.txt

# echo "" > ~/.amb.txt

# for i in `cat ~/ab.txt | cut -d, -f3 | uniq -c | sed 's/      //g' | sed 's/^\ \{1,\}//g' | grep -v '^1 ' | cut -d " " -f2-4`; do
# 	a=`cat ~/ab.txt | grep $i | cut -d, -f1 | paste -sd+ | bc`
# 	if [[ "${a:0:1}" == "." ]] ; then
# 		a="0"$a
# 	fi 
# 	if [[ $a == 0 ]]; then
# 		a="0.0"
# 	fi
# 	b=`cat ~/ab.txt | grep $i | cut -d, -f2 | paste -sd+ | bc`
# 	echo $b
# 	if [[ "${b:0:1}" == "." ]] ; then
# 		b="0"$b
# 	fi 
# 	if [[ $b == 0 ]]; then
# 		b="0.0"
# 	fi
# 	echo "$a,$b,$i" >> ~/.amb.txt
# 	cat ~/ab.txt | grep -v $i > ~/.AB.txt
# 	mv ~/.AB.txt ~/ab.txt
# done
# mv  ~/ab.txt ~/.AB.txt
# cat ~/.amb.txt ~/.AB.txt > ~/ab.txt

# cpu_total=`sed '/^$/d' ab.txt | cut -d, -f1 | paste -sd+ | bc`
# ram_total=`sed '/^$/d' ab.txt | cut -d, -f2 | paste -sd+ | bc`
# cpu_total=`echo "scale=3; $cpu_total / 8" | bc | awk '{print int($1)}'`
# ram_total=`echo $ram_total					   | awk '{print int($1)}'`
# # if [[ $ram_total -eq 0 ]]; then
# 	# sleep 1
# 	# Top_cumulative $1
# # fi
# echo "CPU,MEM,COMMAND" > ~/.AB.txt
# echo '' >> ~/.AB.txt
# sort -t, -k $sort_by -n ~/ab.txt | sed 's/0\.0/---/g' >> ~/.AB.txt
# echo "CPU,MEM,COMMAND" >> ~/.AB.txt
# cat ~/.AB.txt | column -t -s, | grep --color "\|CPU\|MEM\|COMMAND"
# rm -f ~/.{amb,AB}.txt ~/ab.txt 

# n=""
# if [[ `echo $cpu_total'<'10 | bc -l` == 1 ]] ; then 
# 	n=" "
# fi
# echo -e "\n\n${RED}****************************************************************${normal}"
# echo -n  "cpu: $cpu_total $n%   "
# for i in $(seq 1 `echo "$cpu_total / 2" | bc`); do echo -n "-" ; done
# echo 
# echo -n  "ram: $ram_total %   "
# for i in $(seq 1 `echo "$ram_total / 2"     | bc`); do echo -n "!" ; done
# echo
# echo -e "${RED}****************************************************************${normal}\n\n"




# ram=`free | head -2 | tail -1 | sed 's/^Mem: //g' | sed 's/ \{2,\}/,/g' | sed 's/^,//g'`
# swap=`free  | tail -1 | sed 's/^Swap: //g' | sed 's/ \{2,\}/,/g' | sed 's/^,//g'`

# ram_total=`echo $ram | cut -d, -f1`
# ram_used=`echo $ram | cut -d, -f2`
# ram_used_perc=`echo "scale=3; $ram_used/$ram_total" | bc`
# ram_used_perc=`echo "$ram_used_perc * 100" | bc`
# ram_used_perc=${ram_used_perc%.*}

# swap_total=`echo $swap | cut -d, -f1`
# swap_used=`echo $swap | cut -d, -f2`
# swap_used_perc=`echo "scale=3; $swap_used/$swap_total" | bc`
# swap_used_perc=`echo "$swap_used_perc * 100" | bc`
# swap_used_perc=${swap_used_perc%.*}
