#!/usr/bin/python3
# https://stackoverflow.com/questions/50197643/youtbe-dl-multiple-downloads-at-the-same-time
import multiprocessing.dummy
import subprocess
import os
import traceback
import sys

error_file = "/home/amir/.downloading_errors.txt"

before=int(list(os.popen("du -s -BM | cut -dM -f1"))[0].strip())

if os.path.exists(error_file):
	os.remove(error_file)

def download(url):
	try:
		subprocess.check_call(['youtube-dl', url])
		open("downloaded.txt", "a").write(url+"\n")
	except:
		e_ = traceback.format_exc()
		print("\n\nERROR --------------------------------------------------")
		print(f"url: {url}")
		print(e_)
		print("---------------------------------------------- Error END\n\n")
		open(error_file, 'a').write(f'---------------------------------\n\n\nUrl:{url}\n{e_}\n\n')

try:
	arr = [i for i in set(open("mp4_links.txt", "r").read().splitlines()) if i.strip()]
except:
	try:
		file_name = sys.argv[1]
	except:	
		import readline
		readline.parse_and_bind("tab: complete")
		file_name = input("file <mp4_links.txt> not found, please Enter your file name: ")
	arr = [i for i in set(open(file_name, "r").read().splitlines()) if i.strip() and (not i.startswith("#"))]

try:
	downloaded = open("downloaded.txt", "r").read().splitlines()
	arr = [i for i in arr if not i in downloaded]
except:
	pass
	
p = multiprocessing.dummy.Pool()
try:
	p.map(download, arr)
except:
	pass

if os.path.exists(error_file):
	errors = open(error_file, 'r').read()
	print("\n\n\n*********** Error URLs ***********\n")
	print(errors)

print(f"\n\nErrors saved as {error_file}\n\n")
after=int(list(os.popen("du -s -BM | cut -dM -f1"))[0].strip())
downloaded_size= after - before
print (f"\n\n................... Downloaded {downloaded_size} MB ................\n\n")