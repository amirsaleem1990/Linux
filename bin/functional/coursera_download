#!/usr/bin/python3
import json
import pickle
from selenium import webdriver
import time
from bs4 import BeautifulSoup
import requests
import re
import numpy as np
from selenium.webdriver.firefox.options import Options
import os
import sys

def func(course_name):
	print(f"\n\n\n********************************** Starting <{course_name}> course ********************************** ")
	if not os.path.exists(course_name):
		os.mkdir(course_name)
	# course_name = 'simple-past-tense'
	total_weeks = int(input("Enter total weeks: ").strip())
	# total_weeks = 4

	vids_download_urls_id_provided = False
	vids_pkl_is_provided           = False

	try:
		res = (sys.argv[1].strip() == f'{base_dir}/vids.pkl')
		vids_pkl_is_provided = res
	except:
		pass

	try:
		res = (sys.argv[1].strip() == f'{base_dir}/vids_download_urls.pkl')
		vids_download_urls_id_provided = res
		if res:
			vids_pkl_is_provided = res
	except:
		pass

	# print(vids_download_urls_id_provided,vids_pkl_is_provided)
	# sys.exit()
	if (not vids_download_urls_id_provided) or (not vids_pkl_is_provided):

		print("Attempting to Login   ")

		browser = webdriver.Firefox(executable_path = f"{base_dir}/github/working/Facebook_posts_links/geckodriver")

		#navigates you to the  page.
		browser.get(login_url)

		#find the email field and enter the email example@yahoo.com.
		time.sleep(3)
		email = browser.find_elements_by_css_selector("input[data-e2e=login-email-input]")
		email[0].send_keys(email_address)


		#find the password field and enter the password password.
		time.sleep(3)
		password = browser.find_elements_by_css_selector("input[data-e2e=login-password-input]")
		password[0].send_keys(pas)


		#find the login button and click it.
		time.sleep(3)
		loginButton = browser.find_elements_by_css_selector("button[data-e2e=login-form-submit-button]")
		loginButton[0].click()

		print("Successfully Logged in", "\n\n\n")

	input("\nPress any key after captcha..........\n")

	if vids_download_urls_id_provided:
		vids_download_urls = pickle.load(open(f"{base_dir}/vids_download_urls.pkl", 'rb'))
		vids = pickle.load(open(f"{base_dir}/vids.pkl", 'rb'))
	else:
		if vids_pkl_is_provided:
			vids = pickle.load(open(f"{base_dir}/vids.pkl", 'rb'))
		else:
			vids = {}
			for week in range(1, total_weeks+1):
				url = f"https://www.coursera.org/learn/{course_name}/home/week/{week}"
				browser.get(url)
				# time.sleep(3)
				time.sleep(30)
				extrected_urls = []
				s = BeautifulSoup(browser.page_source, "lxml")
				pattern = course_name.strip()+"/lecture"

				x2= s.find_all('a', href=re.compile(pattern))
				extrected_urls += [i['href'] for i in x2]

				x2= s.find_all('source', href=re.compile(pattern))
				extrected_urls += [i['src'] for i in x2]

				vids[week] = extrected_urls
				print(f"\nWeek #{week} has {len(vids[week])} videos")

			for k, v in vids.items():
				vids[k] = ['https://www.coursera.org' + i for i in v]

			len_vids = sum([len(v) for k,v in vids.items()])
			if len_vids:
				print(f"\n\nVides urls saved as {base_dir}/vids.pkl")
				print(json.dumps(vids, indent=4))
				print()
			else:
				print("\n\nOOOHHH, No url")

			pickle.dump(vids, open(f"{base_dir}/vids.pkl", 'wb'))


		# base_dir = os.getcwd()
		vids_download_urls = {}
		for k,v in vids.items():
			# os.mkdir(f"week-{k}")
			# os.chdir(f"week-{k}")
			for video in v:
				browser.get(video)
				time.sleep(30)
				s = BeautifulSoup(browser.page_source, "lxml")
				pattern = "mp4"

				extrected_urls = []
				for i in s.select("a"):
					try:
						l = i['href']
						if '.mp4' in l:
							extrected_urls.append(i['href']) 
					except:
						pass

				for i in s.select("source"):
					try:
						l = i['src']
						if '.mp4' in l:
							extrected_urls.append(i['src']) 
					except:
						pass

				if extrected_urls:
					vids_download_urls[video] = extrected_urls
				else:
					print(f"No download link for the video : {video}")

		if len(vids_download_urls):
			print(f"\n\nDVides downlonload links saved as {base_dir}/vids_download_urls.pkl")
			print(json.dumps(vids_download_urls, indent=4))
			print()
		else:
			print("\n\nOOOHHH, No download url")


		pickle.dump(vids_download_urls, open(f"{base_dir}/vids_download_urls.pkl", 'wb'))

	for week, videos_urls in vids.items():
		week_ = f"Week-{week}"
		for video_url in videos_urls:
			if not os.path.exists(week_):
				os.mkdir(week_)
			download_url = vids_download_urls[video_url][0]
			vid_name = f"{week_}/{vids[week].index(video_url)+1}-{video_url.split('/')[-1]}"
			print(f">>> Downloading .... {vid_name}")
			com = f"youtube-dl '{download_url}' -o {course_name}/{vid_name}.mp4"
			os.system(com)


base_dir="/home/amir"

course_name_received = False
if os.path.exists(f"{base_dir}/.coursera_course_name.txt"):
	course_name = open(f"{base_dir}/.coursera_course_name.txt", 'r').read().strip()
	if input(f"Are you need to resue last course name, which is <{course_name}> [y|n]: ") == "y":
		course_name_received = True
	else:
		pass
if not course_name_received:
	course_name = input("Enter course name, \nNote: Extract course name from course url, eg: <simple-past-tense> from <https://www.coursera.org/learn/simple-past-tense/home/week/1>\nNOTE: if multiple courses, use pipe | as delimeter\n\n").strip()
	open(f"{base_dir}/.coursera_course_name.txt", 'w').write(course_name.strip())


email_address = "amirsaleem1990@hotmail.com"
login_url = "https://www.coursera.org/?authMode=login"

import os
pas = list(os.popen("echo 1 | /home/amir/.local/bin/ipython3 /home/amir/github/Amir-personal/PIN/pin2.py  2 coursera | tail -1 | sed 's/t./traders/'"))[0].strip()

if "|" in course_name:
	for c in course_name.split("|"):
		func(course_name=c.strip())
else:
	func(course_name=course_name.strip())
