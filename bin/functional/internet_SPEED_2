#!/usr/bin/bash

align() {
	var_="$1"
	lenght=${#var_}
	reference_string="$2"
	provided_lenght=${#reference_string}

	if [[ $lenght == $provided_lenght ]]; then
		echo $var_
	else
		add_zeros=$(echo $provided_lenght-$lenght|bc -l)
		echo -n " $var_"
		for i in $(seq $add_zeros) ; do 
			echo -n ' '
		done
		echo
	fi
}


size_in_proper_units (){
	# Assumption: This function will get an input in KBs
	x=$(echo $1'>'1000000 | bc -l)
	if [[ $x -eq 1 ]]; then
		r=$(echo "scale=3; $1/1000000" | bc -l)
		echo "$r G"
	else
		x=$(echo $1'>'1000 | bc -l)
		if [[ $x -eq 1 ]]; then
			r=$(echo "scale=1; $1/1000" | bc -l)
			echo "$r M"
		else
			echo "$1 K"
		fi
	fi

}

float_to_int() {
	int=${1%.*}
	echo $int
}

print_results(){

	total_time=$(convertsecs $total_time_in_seconds)

	total_download_x=$(size_in_proper_units $total_download)
	total_upload_x=$(size_in_proper_units $total_upload)

	total_download_x=$(align "$total_download_x" "$v1")
	total_upload_x=$(align "$total_upload_x" "$v2")
	total_time=$(align "$total_time" "$v3")

	avg_download_speed=$(align "$avg_download_speed K" "$v4")
	avg_upload_speed=$(align "$avg_upload_speed K" "$v5")
	current_date_and_time=$(align "$current_date_and_time" "$v8")

	current_download=$(float_to_int $current_download)
	current_upload=$(float_to_int $current_upload)

	current_download=$(align "$current_download" "$v6")
	current_upload=$(align "$current_upload" "$v7")

	free_size_in_current_partition=$(free_space_on_current_partition)
	free_size_in_current_partition=$(align "$free_size_in_current_partition" "$v9")

	if [[ $(( $nx % 10 )) == 0 ]]; then
		echo -e "${RED}$v8| $v6| $v7| $v1| $v2| $v3| $v4| $v5|$v9${NORMAL}" | tee -a /home/amir/.internet_speed 2> /dev/null
		nx=0
	fi
	let "nx+=1"


	echo -e "$current_date_and_time|$current_download|$current_upload|$total_download_x|$total_upload_x|$total_time|$avg_download_speed|$avg_upload_speed|$free_size_in_current_partition"  | tee -a /home/amir/.internet_speed 2> /dev/null

}



main() {
	while :; do
		download_and_upload=$(ifstat -i wlp3s0 1s 1 | tail -n1 | sed 's/^\ \{1,\}//g' | sed 's/\ \{1,\}/,/g')
		current_download=$(echo $download_and_upload|cut -d, -f1)
		current_upload=$(echo $download_and_upload|cut -d, -f2)
		current_time=$(date +%s)
		current_date_and_time=$(date +%F\ %T)

		total_download=$(echo "scale=3; $total_download + $current_download" |bc -l)
		total_upload=$(echo "scale=3; $total_upload + $current_upload" |bc -l)
		total_time_in_seconds=$((current_time - start_time))

		avg_download_speed=$(echo "scale=0; $total_download/$total_time_in_seconds"|bc -l)
		avg_upload_speed=$(echo "scale=0; $total_upload/$total_time_in_seconds"|bc -l)

		# if [[ $total_time_in_seconds -gt 5 ]]; then
		# 	break
		# fi

		print_results

	done

}

total_download=0
total_upload=0
start_time=$(date +%s)
nx=0

v9="Space Left "
v8="Current Time       "
v6="Current D (KB)  "
v7="Current U (KB)  "
v1="Total D   "
v2="Total U   "
v3="Total Time       "
v4="Avg D Speed   "
v5="Avg U Speed   "


main