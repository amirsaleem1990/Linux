#!/usr/bin/env ipython3
from termcolor import colored
# print(colored("\n\n\tFor actual status for each repo run:", 'red'),
# 	colored("""\n\t\tcd /home/amir/github/; for i in `ls /home/amir/github/ -a | grep -v  '^\.'`; do if [[ $i == "lfd-projects/" ]] ; then continue ; fi ; echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> $i" ; cd $i ; git status; cd ../ ; done\n""", 'green')) 


import os
os.chdir("/home/amir/github")

command="""
IFS=$'\n'
find . -size +49M -exec du -sh {} \; | grep -v ".pack$\|ames_data_for_NER.zip\|files_for_downlode.zip" | sort -h > /home/amir/.amda_amir
if [ `cat /home/amir/.amda_amir | wc -l` -gt 0 ] ; then 
	cat /home/amir/.amda_amir
fi
""".strip()
f = list(os.popen(command))
os.remove("/home/amir/.amda_amir")
if f:
	print("\n\n")
	from termcolor import colored
	print(colored("""
-------------- Filese Larger then 49 MB --------------
NOTE: files > 49 are not allowd. either remove this/these file/s or move it/these to another directory
	""".strip(), "red"))
	f = [i.replace("\t.", "\tgithub" ).strip() for i in f]
	for i in f:
		print(colored(i, 'green'))
	print("\n\n")
if "git_files.txt" in os.listdir():
	os.system("rm git_files.txt")
aa = True

not_to_commit_repos = ["lfd-projects"]
if not_to_commit_repos:
	print("************************************")
for i in not_to_commit_repos:
	print(f"<{i}> repository excluded from this opereation\n")

repos = os.listdir() # list of all local repositories
repos = [repo for repo in repos if not repo in not_to_commit_repos and not repo.startswith(".")]
r = ["Your branch is up to date with 'origin/master'.\n", '\n', 'Changes not staged for commit:\n', '  (use "git add <file>..." to update what will be committed)\n', '  (use "git checkout -- <file>..." to discard changes in working directory)\n', 'no changes added to commit (use "git add" and/or "git commit -a")\n']
d_ = {"To be pushed" : [],
	   "To be commit" : []}
for i in repos:
	os.chdir(i)
	a = list(os.popen("git status"))
	a = [i.strip() for i in '||'.join(a).replace("\n", "").replace("\t", '').split('||') if i]
	if '(use "git push" to publish your local commits)' in ''.join(a):
		d_['To be pushed'].append(i)
	if '(use "git add <file>..." to update what will be committed)' in ''.join(a) or ('(use "git add <file>..." to include in what will be committed)' in ''.join(a)) :
		d_['To be commit'].append(i)
		if '(use "git add <file>..." to include in what will be committed)' in ''.join(a):
			d_['To be pushed'].append(i)
	else:
		lst = True
	os.chdir("../")

for i in d_['To be pushed']:
	if i in d_['To be commit']:
		d_['To be pushed'].remove(i)
break_ = True
for k,v in d_.items():
	if not v:
		continue
	print(colored(f">>>>>>> {k} <<<<<<<<<", 'red'))
	for val in set(v):
		#print(k, ": >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>", val)
		print("   ", val)
		break_ = False
	print()
if break_:
	print("\nNothing to Add or Push")
print()


